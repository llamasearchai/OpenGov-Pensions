apiVersion: apps/v1
kind: Deployment
metadata:
  name: opengovpension-api
  labels:
    app: opengovpension
    component: api
    version: "1.1.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: opengovpension
      component: api
  template:
    metadata:
      labels:
        app: opengovpension
        component: api
        version: "1.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: api
        image: ghcr.io/llamasearchai/opengovpension:1.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8001
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DEBUG
          value: "false"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        - name: WORKERS
          value: "4"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: jwt-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: openai-api-key
        - name: LOG_LEVEL
          value: "INFO"
        - name: STRUCTURED_LOGGING
          value: "true"
        - name: TRACING_ENABLED
          value: "true"
        - name: PROMETHEUS_ENABLED
          value: "true"
        - name: ENABLE_CORS
          value: "true"
        - name: ENABLE_RATE_LIMITING
          value: "true"
        - name: RATE_LIMIT_PER_MINUTE
          value: "120"
        - name: MAX_LOGIN_ATTEMPTS
          value: "5"
        - name: LOCKOUT_DURATION_MINUTES
          value: "15"
        - name: SESSION_COOKIE_SECURE
          value: "true"
        - name: SESSION_COOKIE_HTTPONLY
          value: "true"
        - name: ENABLE_REQUEST_VALIDATION
          value: "true"
        - name: MAX_CONCURRENT_ANALYSES
          value: "10"
        - name: REQUEST_TIMEOUT
          value: "300"
        - name: ENABLE_WEBSOCKETS
          value: "true"
        - name: ENABLE_AUDIT_LOG
          value: "true"
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: data-volume
          mountPath: /app/data
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: metrics
          protocol: TCP
        env:
        - name: REDIS_ADDR
          value: "redis://localhost:6379"
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: data-volume
        emptyDir: {}
      initContainers:
      - name: wait-for-database
        image: postgres:15-alpine
        command: ['sh', '-c', 'until pg_isready -h database -p 5432; do echo waiting for database; sleep 2; done;']
        env:
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: database-name
        - name: PGHOST
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: database-host
        - name: PGPORT
          value: "5432"
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: database-user
      - name: database-migration
        image: ghcr.io/llamasearchai/opengovpension:1.1.0
        command: ['alembic', 'upgrade', 'head']
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: opengovpension-secrets
              key: database-url
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
